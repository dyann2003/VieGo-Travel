@model IEnumerable<Model.Models.User>
<main class="flex min-h-[calc(100vh-56px)]">
    <!-- Sidebar -->
    <aside class="w-56 border-r border-gray-200 px-4 py-6 text-sm font-semibold text-gray-900 select-none overflow-y-auto">
        <h2 class="mb-4">Admin Panel</h2>
        <nav class="flex flex-col space-y-2 text-gray-700 font-normal">
            <a class="flex items-center space-x-2 hover:text-gray-900 transition-colors duration-200"
               href="admindashboard.html"><i class="fas fa-list-alt text-xs"></i><span>Dashboard</span></a>
            <a class="flex items-center space-x-2 hover:text-gray-900 transition-colors duration-200"
               href="adminmanageserviceprovider.html">
                <i class="fas fa-list-alt text-xs"></i><span>Manage Service Provide</span>
            </a>
            <a class="flex items-center space-x-2 hover:text-gray-900 transition-colors duration-200"
               href="adminmanagetourguide.html">
                <i class="fas fa-list-alt text-xs"></i><span>Manage Tour Guide</span>
            </a>
            <a class="flex items-center space-x-2 hover:text-gray-900 transition-colors duration-200"
               href="adminmanageuser.html">
                <i class="fas fa-list-alt text-xs"></i><span>Manage User Account</span>
            </a>
        </nav>
    </aside>

    <!-- Content -->
    <section class="flex-1 p-6">
        <h1 class="text-xl font-extrabold mb-1">Manage Users</h1>
        <p class="text-sm text-gray-500 mb-6">
            View, edit, and manage your users
        </p>

        <div class="bg-white border border-gray-200 rounded-md p-4">
            <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-4">
                <div>
                    <h2 class="font-semibold text-base mb-0.5">Your Users</h2>
                    <p class="text-xs text-gray-500">You have @Model.Count() users in total</p>
                </div>
                <a href="/User/Create"
                   id="addUserBtn"
                   class="mt-3 sm:mt-0 inline-flex items-center space-x-2 bg-gray-900 text-white text-xs font-semibold px-3 py-2 rounded hover:bg-gray-800">
                    <i class="fas fa-plus text-[10px]"></i>
                    <span>Add New User</span>
                </a>

            </div>

            <div class="flex flex-col sm:flex-row sm:items-center sm:space-x-2 mb-4">
                <input id="searchInput" type="search"
                       placeholder="Search users by ID, name, or email..."
                       class="flex-1 border border-gray-300 rounded-md px-3 py-2 text-xs text-gray-500 placeholder:text-gray-400 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:border-gray-400" />
                <div class="relative mt-2 sm:mt-0">
                    <button id="filterBtn"
                            aria-haspopup="true"
                            aria-expanded="false"
                            class="flex items-center space-x-1 border border-gray-300 rounded-md px-3 py-2 text-xs text-gray-700 hover:bg-gray-100 focus:outline-none focus:ring-1 focus:ring-gray-400 focus:border-gray-400">
                        <span>Filter</span>
                        <i class="fas fa-sort text-xs"></i>
                    </button>
                    <div id="filterDropdown"
                         class="hidden absolute right-0 mt-1 w-48 bg-white border border-gray-200 rounded-md shadow-lg z-10 text-xs text-gray-700"
                         role="menu"
                         aria-orientation="vertical"
                         aria-labelledby="filterBtn">
                        <a href="#" data-filter="All Users"
                           class="block px-3 py-2 hover:bg-gray-100 filter-option"
                           role="menuitem">All Users</a>
                        <a href="#" data-filter="Active"
                           class="block px-3 py-2 hover:bg-gray-100 filter-option"
                           role="menuitem">Active Users</a>
                        <a href="#" data-filter="Inactive"
                           class="block px-3 py-2 hover:bg-gray-100 filter-option"
                           role="menuitem">Inactive Users</a>
                        <a href="#" data-filter="Premium"
                           class="block px-3 py-2 hover:bg-gray-100 filter-option"
                           role="menuitem">Premium Users</a>
                        <a href="#" data-filter="Standard"
                           class="block px-3 py-2 hover:bg-gray-100 filter-option"
                           role="menuitem">Standard Users</a>
                    </div>
                </div>
            </div>

            <div class="overflow-x-auto">
                <table id="usersTable" class="w-full text-xs text-left text-gray-700 border-collapse border border-gray-200">
                    <thead class="bg-gray-50">
                        <tr>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                User ID
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Name
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Date of Birth
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Email
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Address
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Status
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Type
                            </th>
                            <th class="border border-gray-200 px-3 py-2 font-normal">
                                Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model)
                        {
                            <tr class="border border-gray-200 user-row"
                                data-status="@(user.Status == 1 ? "Active" : "Inactive")"
                                data-type="@user.UserType.ToLower()"
                                data-id="@user.UserId"
                                data-name="@user.FullName.ToLower()"
                                data-email="@user.Email.ToLower()">
                                <td class="border border-gray-200 px-3 py-2 align-top whitespace-nowrap">
                                    @user.UserId
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top">
                                    @user.FullName
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top">
                                    @user.DateOfBirth
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top">
                                    @user.Email
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top">
                                    @user.Address
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top">
                                    <span class="bg-gray-900 text-white text-[10px] font-semibold px-2 py-0.5 rounded-full select-none">
                                        @(user.Status == 1 ? "Active" : "Inactive")
                                    </span>
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top whitespace-nowrap">
                                    @user.UserType
                                </td>
                                <td class="border border-gray-200 px-3 py-2 align-top text-center cursor-pointer select-none relative">
                                    <button aria-label="Open actions menu"
                                            class="w-full h-full">
                                        ...
                                    </button>
                                    <div class="hidden absolute right-0 top-full mt-1 w-32 bg-white border border-gray-200 rounded-md shadow-lg z-20 text-xs text-gray-700">
                                        <a href="/User/Details/@user.UserId"
                                           class="block px-3 py-2 hover:bg-gray-100 view-details-btn">View Details</a>

                                        <a href="/User/Edit/@user.UserId"
                                           class="block px-3 py-2 hover:bg-gray-100 edit-user-btn">Edit User</a>

                                        <form method="post" asp-action="Delete" asp-route-id="@user.UserId" class="block px-3 py-2 hover:bg-gray-100 edit-user-btn">
                                            <button type="submit"
                                                    onclick="return confirm('Are you sure you want to delete this user?');"
                                                    class="w-full text-left px-3 py-2 hover:bg-gray-100 text-red-600">
                                                Delete User
                                            </button>
                                        </form>
                                    </div>

                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </section>
</main>

<script>
    // Filter dropdown functionality
    const filterBtn = document.getElementById("filterBtn");
    const filterDropdown = document.getElementById("filterDropdown");

    filterBtn.addEventListener("click", () => {
      const expanded = filterBtn.getAttribute("aria-expanded") === "true";
      filterBtn.setAttribute("aria-expanded", !expanded);
      filterDropdown.classList.toggle("hidden");
    });

    // Close filter dropdown if clicked outside
    document.addEventListener("click", (e) => {
      if (
        !filterBtn.contains(e.target) &&
        !filterDropdown.contains(e.target)
      ) {
        filterDropdown.classList.add("hidden");
        filterBtn.setAttribute("aria-expanded", "false");
      }
    });

    // Handle actions menu toggling
    document.querySelectorAll("td.relative").forEach((td) => {
      const btn = td.querySelector("button");
      const menu = td.querySelector("div");

      btn.addEventListener("click", (e) => {
        e.stopPropagation();
        // Close all other menus
        document.querySelectorAll("td.relative div").forEach((d) => {
          if (d !== menu) d.classList.add("hidden");
        });
        // Toggle current menu
        menu.classList.toggle("hidden");
      });
    });

    // Close actions menus if clicked outside
    document.addEventListener("click", () => {
      document
        .querySelectorAll("td.relative div")
        .forEach((d) => d.classList.add("hidden"));
    });

    // SEARCH and FILTER logic
    const searchInput = document.getElementById("searchInput");
    const filterOptions = document.querySelectorAll(".filter-option");
    const userRows = document.querySelectorAll(".user-row");

    let currentFilter = "All Users";

    function filterUsers() {
      const searchTerm = searchInput.value.trim().toLowerCase();

      userRows.forEach(row => {
        const id = row.dataset.id.toLowerCase();
        const name = row.dataset.name.toLowerCase();
        const email = row.dataset.email.toLowerCase();
        const status = row.dataset.status.toLowerCase();
        const type = row.dataset.type.toLowerCase();

        // Check search match (id, name, email)
        const matchesSearch = id.includes(searchTerm) || name.includes(searchTerm) || email.includes(searchTerm);

        // Check filter match
        let matchesFilter = false;
        if(currentFilter === "All Users") {
          matchesFilter = true;
        } else if (currentFilter === "Active" || currentFilter === "Inactive") {
          matchesFilter = status === currentFilter.toLowerCase();
        } else if (currentFilter === "Premium" || currentFilter === "Standard") {
          matchesFilter = type === currentFilter.toLowerCase();
        }

        if(matchesSearch && matchesFilter) {
          row.style.display = "";
        } else {
          row.style.display = "none";
        }
      });
    }

    // Search input event
    searchInput.addEventListener("input", filterUsers);

    // Filter options click event
    filterOptions.forEach(option => {
      option.addEventListener("click", e => {
        e.preventDefault();
        currentFilter = option.dataset.filter;
        filterBtn.querySelector("span").textContent = currentFilter;
        filterDropdown.classList.add("hidden");
        filterBtn.setAttribute("aria-expanded", "false");
        filterUsers();
      });
    });

    // Initial filter
    filterUsers();
</script>
